#include<stdio.h>
#include<stlib.h>
struct Node{
	int data;
	struct Node*next;
};
struct Node* createNode(int data){
	struct Node* newNode=(struct Node*)malloc(sizeof(struct Node));
	newNode->data=data;
	newNode->next=NULL;
	return newNode;
}

void insertatfirst(struct Node** head,int data){
	struct Node* newNode=createNode(data);
	newNode->next=*head;
	*head=newNode;
}
void insertatend(struct Node** head,int data){
	struct Node* newNode=createNode(data);
	if(*head==NULL){
		*head=newNode;
		return;
	}
	struct Node* temp=*head;
	while(temp->next!=NULL){
		temp=temp->next;
	}
	temp->next=newNode;
}
void insertatposition(struct Node** head,int data,int position){
	struct Node* newNode=createNode(data);
	if(position==0){
		insertatfirst(head,data);
		return;
	}
	struct Node* temp=*head;
	for(int i=0;temp!=NULL && i<position-1;i++){
		temp=temp->next;
	}
	if(temp==NULL){
		printf("Out of range\n");
		free(newNode);
		return;
	}
	newNode->next=temp->next;
	temp->next=newNode;
}
void deletionatfirst(struct Node** head){
	if(*head==NULL){
		printf("List is Empty");
		return;
	}
	struct Node* temp=*head;
	*head=temp->next;
	free(temp);
}
void deletionatend(struct Node** head){
	if(*head==NULL){
		printf("List is Empty");
		return;
	}
	struct Node* temp=*head;
	if(temp->next==NULL){
		free(temp);
		*head=NULL;
		return;
	}
	while(temp->next->next!=NULL){
		temp=temp->next;
	}
	free(temp->next);
	temp->next=NULL;
}
void deletionatposition(struct Node** head,int position){
	if(*head==NULL){
		printf("List is Empty");
		return;
	}
	struct Node* temp=*head;
	if(position=0){
		deltionatfirst(head);
		return;
	}
	for(int i=0;temp!=NULL && i<position-1;i++){
		temp=temp->next;
	}
	if(temp==NULL||temp->next=NULL){
		printf("Position out of range\n");
		return;
	}
	struct Node* next=temp->next->next;
	free(temp->next);
	temp->next=next;
}
void print(struct Node*head){
	struct Node* temp=head;
	while(temp1=NULL){
		printf("%d->",temp->data);
		temp=temp->next;
	}
	pritnf("NULL\n");
}
int main(){
	struct Node* head=NULL;
	insertatfirst(&head,10);
	printf("Linked list after inserting the node:10 at the beginning\n");
	print(head);
	printf("Linked list after inserting the node:20 at the end\n");
	insertatend(&head,20);
	print(head);
	printf("Linked list after inserting the node:5 at the end\n");
	insertatend(&head,5);
	print(head);
	printf("Linked list after inserting the node:30 at the 30\n");
	insertatend(&head,30);
	print(head);
	printf("Linked list after inserting the node:30 at the 30\n");
	insertatend(&head,30);
	print(head);
	printf("Linked list after inserting the node:15 at the position 2\n");
	insertatposition(&head,15,2);
	print(head);
	printf("Linked list after deleting the first node\n");
	deletionatfirst(&head);
	print(head);
	printf("Linked list after deleting the last node\n");
	deletionatend(&head);
	print(head);
	printf("Linked list after deleting the node at position 1\n");
	deletionatposition(&head,1);
	print(head);
	return 0;
}




























